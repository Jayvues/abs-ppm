{"version":3,"sources":["actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","images/abs-logo.png","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Base.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","components/Layout/footer.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","createProject","project","history","dispatch","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","href","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","headerLinks","buttonlinks","security","validToken","user","userIsAuthenticated","fullName","class","src","logo","alt","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","nextContext","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevtools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","protoTypes","PropTypes","func","isRequired","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","console","log","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Login","username","password","LoginRequest","login","setItem","decoded","jwt_decode","SecuredRoute","component","otherProps","render","object","Footer","jwtToken","decode_jwtToken","currentTime","Date","now","exp","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.309ea66e.chunk.js","sourcesContent":["/**\n * @Author :JAY\n * Project :ABS Project Tracking System \n * Client : React etc.,\n */\n//Types for Error actions\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types for Backlog actions\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\nexport const SET_CURRENT_USER = \"SET-CURRENT_USER\";\n","/**\n * @Author :JAY\n * Project :ABS Project Tracking System \n * Client : React etc.,\n */\n\n// Project Action \nimport axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async (dispatch) => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\nexport const getProjects = () => async (dispatch) => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data,\n  });\n};\nexport const getProject = (id, history) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data,\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\nexport const deleteProject = (id) => async (dispatch) => {\n  if (\n    window.confirm(\n      \"Are You sure ? This will delete project and all the data related to it .\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id,\n    });\n  }\n};\n","/**\n * @Author :JAY\n * Project :ABS Project Tracking System \n * Client : React etc.,\n */\n\n// Adding project Details\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = (id) => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-md-3 mr-auto border-left\">\n              <span className=\"text-center\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-md-3 mr-auto\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-3 ml-auto border-right\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"pr-lg-5\">Project Board</i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"pr-lg-2\"> Update Project Info</i>\n                  </li>\n                </Link>\n\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"pr-lg-5\">Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProject })(ProjectItem);\n","/**\n * @Author :JAY\n * Project :ABS Project Tracking System \n * Client : React etc.,\n */\n\n// Button component for crate a project\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Add } from \"@material-ui/icons\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <div className=\"text-center mb-0 py-1\">\n        <Link to={\"/addProject\"} className=\"contact form-control btn-custom\">\n          Create a Project\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","/**\n * @Author :JAY\n * Project :ABS Project Tracking System \n * Client : React etc.,\n */\n// Project Dashboard\nimport React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport { PropTypes } from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const projects = this.props.project.projects;\n\n\n\n    return (\n      <div>\n        {/*Dashboard Component (Project Item included) */}\n\n        <div className=\"projects\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <h1 className=\"display-9 text-center pt-3\">Projects</h1>\n                \n                <CreateProjectButton />\n                <br />\n                {projects.map((project) => (\n                  <ProjectItem key={project.id} project={project} />\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n        <p>\n          <a href=\"javascript:history.back()\">Go Back</a>\n        </p>\n      </div>\n\n      /*{/!*  End of Dashboard Component *!/}*/\n    );\n  }\n}\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project,\n});\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\n","/**\n * @Author :JAY\n * Project :ABS Project Tracking System \n * Client : React etc.,\n */\n\n// Security Token\nimport axios from \"axios\";\n\nconst setJWTToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\nexport default setJWTToken;\n","/**\n * @Author :JAY\n * Project :ABS Project Tracking System \n * Client : React etc.,\n */\n\n// Scecurity using JWT Token\nimport axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async (dispatch) => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\nexport const login = (LoginRequest) => async (dispatch) => {\n  try {\n    //post => Login Request\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n    //extract token from res.data\n    const { token } = res.data;\n    //store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n    //set our token header ***\n    setJWTToken(token);\n    //decode token on React\n    const decoded = jwt_decode(token);\n    //dispatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {},\n  });\n};\n","export default __webpack_public_path__ + \"static/media/abs-logo.75d82451.png\";","/**\r\n * @Author :JAY\r\n * Project :ABS Project Tracking System \r\n * Client : React etc.,\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\nimport logo from \"../../images/abs-logo.png\";\r\nimport \"../../App.css\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n   const userIsAuthenticated = (\r\n        \r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto \">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"btn btn-sm btn-primary mr-1 \" to={\"/dashboard\"}>\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          &nbsp;\r\n          <li>\r\n            <Link\r\n              className=\"btn btn-sm btn-primary mr-2 \"\r\n              to={\"/logout\"}\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse \" id=\"mobile-nav\">\r\n        &nbsp;\r\n        <ul className=\"navbar-nav ml-auto \">\r\n          {/* <li className=\"nav-item\">\r\n            <Link className=\"contact form-control btn-custom\" to={\"/register\"}>\r\n              Sign Up\r\n            </Link>\r\n          </li> */}\r\n          &nbsp;\r\n          {/* <li>\r\n            <Link className=\"contact form-control btn-custom\" to={\"/login\"}>\r\n              Login\r\n            </Link>\r\n          </li>*/}\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userbuttons = (\r\n\r\n            <button\r\n              className=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-toggle=\"collapse\"\r\n              data-target=\"#mobile-nav\"\r\n            >\r\n              <span className=\"navbar-toggler-icon\" />\r\n              <span class=\"toggler-icon top-bar\"></span>\r\n              <span class=\"toggler-icon middle-bar\"></span>\r\n              <span class=\"toggler-icon bottom-bar\"></span>\r\n            \r\n            </button>\r\n    );\r\n\r\n    let headerLinks;\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n      \r\n    } \r\n    else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\nlet buttonlinks;\r\n\r\n if ( validToken && user) {\r\n    \r\n    buttonlinks = userbuttons;\r\n  } \r\n  else {\r\n   \r\n   }\r\n\r\n\r\n    return (\r\n      //Navbar Component\r\n      <div>\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-light mb-4 shadow-xl\">\r\n          <div className=\"container\">\r\n            <Link className=\"navbar-brand\" to=\"/\">\r\n              <img class=\"logo\" src={logo} alt=\"logo\" />\r\n            </Link>\r\n            \r\n            {buttonlinks}\r\n         \r\n            {headerLinks}\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","/**\n * @Author :JAY\n * Project :ABS Project Tracking System \n * Client : React etc.,\n */\n\n// Add Projects to the dashboard\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  //life cycle hooks\n  componentWillReceiveProps(nextProps, nextContext) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div>\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center pt-3\">\n                <h5>Create Project form</h5>\n                <form class=\"w-full\" onSubmit={this.onSubmit}>\n                  <div className=\"flex items-center border-b border-blue-500 py-2\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\n                        \"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none box-shadow: 0 0 10px green\",\n                        {\n                          \"is-invalid\": errors.projectName,\n                        }\n                      )}\n                      placeholder=\"Project Name\"\n                      name={\"projectName\"}\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className={\"invalid-feedback\"}>\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n\n                  <div className=\"flex items-center border-b border-blue-500 py-2\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\n                        \"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none box-shadow: 0 0 10px green\",\n                        {\n                          \"is-invalid\": errors.projectIdentifier,\n                        }\n                      )}\n                      placeholder=\"Unique Project ID\"\n                      name={\"projectIdentifier\"}\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className={\"invalid-feedback\"}>\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"flex items-center border-b border-blue-500 py-2\">\n                    <textarea\n                      className={classnames(\n                        \"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none box-shadow: 0 0 10px green\",\n                        {\n                          \"is-invalid\": errors.description,\n                        }\n                      )}\n                      placeholder=\"Project Description\"\n                      name={\"description\"}\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    />\n                    {errors.description && (\n                      <div className={\"invalid-feedback\"}>\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"flex items-center border-b border-blue-500 py-2\">\n                    <input\n                      type=\"date\"\n                      className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none box-shadow: 0 0 10px green\"\n                      name=\"start_date\"\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"flex items-center border-b border-blue-500 py-2\">\n                    <input\n                      type=\"date\"\n                      className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none box-shadow: 0 0 10px green\"\n                      name=\"end_date\"\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <br></br>\n                  <input\n                    type=\"submit\"\n                    className=\"contact form-control btn-custom\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n        <p>\n          <a href=\"javascript:history.back()\">Go Back</a>\n        </p>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { createProject })(AddProject);\n","/**\n * @Author :JAY\n * Project :ABS Project Tracking System \n * Client : React etc.,\n */\n\n// Reducer for Error\nimport { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","/**\n * @Author :JAY\n * Project :ABS Project Tracking System \n * Client : React etc.,\n */\n\n// Reducer for Project\nimport { DELETE_PROJECT, GET_PROJECT, GET_PROJECTS } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload,\n      };\n\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload,\n      };\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          (project) => project.projectIdentifier !== action.payload\n        ),\n      };\n    default:\n      return state;\n  }\n}\n","/**\n * @Author :JAY\n * Project :ABS Project Tracking System \n * Client : React etc.,\n */\n\n// Reducer for backlog\nimport {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n} from \"../actions/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {},\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload,\n      };\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload,\n      };\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n\n        project_tasks: state.project_tasks.filter(\n          (project_task) => project_task.projectSequence !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n}\n","/**\n * @Author :JAY\n * Project :ABS Project Tracking System \n * Client : React etc.,\n */\n\n// Reducer for security\nimport { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  validToken: false,\n  user: {},\n};\n\nconst booleanActionPayload = (payload) => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","/**\n * @Author :JAY\n * Project :ABS Project Tracking System \n * Client : React etc.,\n */\n\n// Index file\nimport { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer,\n});\n","/**\n * @Author :JAY\n * Project :ABS Project Tracking System \n * Client : React etc.,\n */\n// Redux Store\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevtools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevtools) {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware), ReactReduxDevtools)\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","/**\n * @Author :JAY\n * Project :ABS Project Tracking System \n * Client : React etc.,\n */\n\n// Update Project details\nimport React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport \"../../style.css\";\n\nclass UpdateProject extends Component {\n  //set state\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-9 text-center pt-3\">\n                Update Project form\n              </h5>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"flex items-center border-b border-blue-500 py-2\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\n                      \"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none box-shadow: 0 0 10px green\",\n                      {\n                        \"is-invalid\": errors.projectName,\n                      }\n                    )}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"flex items-center border-b border-blue-500 py-2 background: #ccc; \">\n                  <input\n                    type=\"text\"\n                    className=\"appearance-none bg-transparent border-none w-full text-gray-300 mr-3 py-1 px-2 leading-tight focus:outline-none box-shadow: 0 0 10px green background: #ccc;\"\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                </div>\n                <div className=\"flex items-center border-b border-blue-500 py-2\">\n                  <textarea\n                    className={classnames(\n                      \"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none box-shadow: 0 0 10px green\",\n                      {\n                        \"is-invalid\": errors.description,\n                      }\n                    )}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    onChange={this.onChange}\n                    value={this.state.description}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"flex items-center border-b border-blue-500 py-2\">\n                  <input\n                    type=\"date\"\n                    className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none box-shadow: 0 0 10px green\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"flex items-center border-b border-blue-500 py-2\">\n                  <input\n                    type=\"date\"\n                    className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none box-shadow: 0 0 10px green\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <br></br>\n                <input\n                  type=\"submit\"\n                  className=\"contact form-control btn-custom\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n        <p>\n          <a href=\"javascript:history.back()\" class=\"\">\n            Go Back\n          </a>\n        </p>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project.project,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProject, createProject })(\n  UpdateProject\n);\n","/**\n * @Author :JAY\n * Project :ABS Project Tracking System \n * Client : React etc.,\n */\n\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport \"../../../App.css\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n  render() {\n    const { project_task } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-danger\";\n      priorityString = \"MEDIUM\";\n    }\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"DONE\";\n    }\n\n    return (\n      <div>\n        <div className=\"card mb-1 bg-light\">\n          <div className={`card-header text-primary ${priorityClass}`}>\n            ID: <b>{project_task.projectSequence} </b>-- Priority :{\" \"}\n            <b>{priorityString}</b>\n          </div>\n          <div className=\"card-body bg-light\">\n            <h5 className=\"card-title\">{project_task.summary}</h5>\n            <p className=\"card-text text-truncate \">\n              {project_task.acceptanceCriteria}\n            </p>\n            <Link\n              to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\n              className=\"btn btn-primary\"\n            >\n              <b>View / Update</b>\n            </Link>\n\n            <button\n              className=\"btn btn-danger ml-4\"\n              onClick={this.onDeleteClick.bind(\n                this,\n                project_task.projectIdentifier,\n                project_task.projectSequence\n              )}\n            >\n              <b>Delete</b>\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.protoTypes = {\n  deleteProjectTask: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProjectTask })(ProjectTask);\n","/**\n * @Author :JAY\n * Project :ABS Project Tracking System \n * Client : React etc.,\n */\n\n// Backlog Action using API\nimport axios from \"axios\";\nimport {\n  DELETE_PROJECT_TASK,\n  GET_BACKLOG,\n  GET_ERRORS,\n  GET_PROJECT_TASK,\n} from \"./types\";\n\nexport const addProjectTask = (backlog_id, project_task, history) => async (\n  dispatch\n) => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (e) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: e.response.data,\n    });\n  }\n};\nexport const getBacklog = (backlog_id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getProjectTask = (backlog_id, pt_id, history) => async (\n  dispatch\n) => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data,\n    });\n  } catch (e) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async (dispatch) => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (e) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: e.response.data,\n    });\n  }\n};\nexport const deleteProjectTask = (backlog_id, pt_id) => async (dispatch) => {\n  if (\n    window.confirm(\n      `You are deleting Project Task ${pt_id} , this action cannot be undone `\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id,\n    });\n  }\n};\n","/**\n * @Author :JAY\n * Project :ABS Project Tracking System \n * Client : React etc.,\n */\n\n// Backlog\nimport React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\nimport \"../../style.css\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_prop } = this.props;\n\n    const tasks = project_tasks_prop.map((project_task) => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n    }\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n    }\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"text-center mb-2\">\n              <div className=\"contact btn-custom todo\">\n                <h4>\n                  <b>TO DO</b>\n                </h4>\n              </div>\n            </div>\n            {todoItems}\n          </div>\n\n          <div className=\"col-md-4\">\n            <div className=\"text-center mb-2\">\n              <div className=\"contact btn-custom\">\n                <h4>\n                  <b>In Progress</b>\n                </h4>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"text-center mb-4\">\n              <div className=\"contact btn-custom\">\n                <h4>\n                  <b>Done</b>\n                </h4>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","/**\n * @Author :JAY\n * Project :ABS Project Tracking System \n * Client : React etc.,\n */\n\n// Project Board\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\nimport \"../../style.css\";\n\nclass ProjectBoard extends Component {\n  //constructor to handle errors\n  constructor() {\n    super();\n    this.state = {\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"container pt-3\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-dark\">\n          <i> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n        <p>\n          <a href=\"javascript:history.back()\">Go Back</a>\n        </p>\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  backlog: state.backlog,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\n","/**\n * @Author :JAY\n * Project :ABS Project Tracking System \n * Client : React etc.,\n */\n\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n    };\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n    console.log(newTask);\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto pt-3\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-dark\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-9 text-center pt-3\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Code</p>\n              <form class=\"w-full\" onSubmit={this.onSubmit}>\n                <div className=\"flex items-center border-b border-blue-500 py-2\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\n                      \"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none box-shadow: 0 0 10px green\",\n                      {\n                        \"is-invalid\": errors.summary,\n                      }\n                    )}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className={\"invalid-feedback\"}>{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"flex items-center border-b border-blue-500 py-2\">\n                  <textarea\n                    className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none box-shadow: 0 0 10px green\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"flex items-center border-b border-blue-500 py-2\">\n                  <input\n                    type=\"date\"\n                    className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none box-shadow: 0 0 10px green\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"flex items-center border-b border-blue-500 py-2\">\n                  <select\n                    className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none box-shadow: 0 0 10px green\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Done</option>\n                  </select>\n                </div>\n\n                <div className=\"flex items-center border-b border-blue-500 py-2\">\n                  <select\n                    className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none box-shadow: 0 0 10px green\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n                <br></br>\n                <input\n                  type=\"submit\"\n                  className=\"contact form-control btn-custom\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\n","/**\n * @Author :JAY\n * Project :ABS Project Tracking System \n * Client : React etc.,\n */\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getProjectTask,\n  updateProjectTask,\n} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      create_At: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At,\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At,\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      create_At: this.state.create_At,\n    };\n\n    // console.log(UpdateProjectTask);\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      UpdateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto pt-3\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-dark\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-9 text-center pt-3\">\n                Update Project Task\n              </h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\n                {this.state.projectSequence}{\" \"}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"flex items-center border-b border-blue-500 py-2\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\n                      \"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none box-shadow: 0 0 10px green\",\n                      {\n                        \"is-invalid\": errors.summary,\n                      }\n                    )}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"flex items-center border-b border-blue-500 py-2\">\n                  <textarea\n                    className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none box-shadow: 0 0 10px green\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"flex items-center border-b border-blue-500 py-2\">\n                  <input\n                    type=\"date\"\n                    className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none box-shadow: 0 0 10px green\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"flex items-center border-b border-blue-500 py-2\">\n                  <select\n                    className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none box-shadow: 0 0 10px green\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"flex items-center border-b border-blue-500 py-2\">\n                  <select\n                    className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none box-shadow: 0 0 10px green\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n                <br></br>\n                <input\n                  type=\"submit\"\n                  className=\"contact form-control btn-custom\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\n  UpdateProjectTask\n);\n","/**\n * @Author :JAY\n * Project :ABS Project Tracking System \n * Client : React etc.,\n */\n\n// Landing Page\nimport { logout } from \"../../actions/securityActions\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport \"../../App.css\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12 text-center\">\n              <h1 class=\"hero-title\">\n                ABS\n                <br /> Project <br/>Planner\n              </h1>\n              <p className=\"hero-discription\">\n                A easy way to prepare, assign, track, update our projects !\n              </p>\n              <div class=\"d-flex justify-center ui vertical masthead center aligned segment\"/>\n              {/* <Link\n                className={\n                  \"flex-shrink-10 bg-blue-500 hover:bg-blue-700 border-blue-500 hover:border-blue-700 text-lg border-4 text-white py-1 px-2 rounded\"\n                }\n                to={\"/register\"}\n              >\n                Signup\n              </Link> */}\n              &nbsp;\n              <Link\n                className={\"col-md-3 contact form-control btn-custom\" \n                  \n                }\n                to={\"/login\"}\n              >\n                Login\n              </Link>\n              \n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps)(Landing);\n","/**\n * @Author :JAY\n * Project :ABS Project Tracking System \n * Client : React etc.,\n */\n\n// User Login\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../actions/securityActions\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password,\n    };\n\n    this.props.login(LoginRequest);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-9 text-center pt-5\">Log In</h1>\n              <form class=\"w-full\" onSubmit={this.onSubmit}>\n                <div class=\"flex items-center border-b border-blue-500 py-2\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\n                      \"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none box-shadow: 0 0 10px green\",\n                      {\n                        \"is-invalid\": errors.username,\n                      }\n                    )}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className={\"invalid-feedback\"}>{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"flex items-center border-b border-blue-500 py-2\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\n                      \"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none box-shadow: 0 0 10px green\",\n                      {\n                        \"is-invalid\": errors.password,\n                      }\n                    )}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className={\"invalid-feedback\"}>{errors.password}</div>\n                  )}\n                </div>\n                <br></br>\n                <input\n                  type=\"submit\"\n                  className=\"contact form-control btn-custom\"\n                  value=\"login\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n        <p>\n          <a href=\"javascript:history.back()\">Go Back</a>\n        </p>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","/**\n * @Author :JAY\n * Project :ABS Project Tracking System \n * Client : React etc.,\n */\n\n// Router for serucirty\nimport React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={(props) =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to={\"login\"} />\n      )\n    }\n  />\n);\n\nSecuredRoute.protoTypes = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","/**\r\n * @Author :JAY\r\n * Project :ABS Project Tracking System \r\n * Client : React etc.,\r\n */\r\n\r\nimport React from \"react\";\r\nimport \"../../App.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div class=\"footer-basic\">\r\n      <footer>\r\n        <div class=\"social\">\r\n          <a href=\"#\">\r\n            <i class=\"icon ion-social-youtube\"></i>\r\n          </a>\r\n          <a href=\"#\">\r\n            <i class=\"icon ion-social-twitter\"></i>\r\n          </a>\r\n          <a href=\"#\">\r\n            <i class=\"icon ion-social-facebook\"></i>\r\n          </a>\r\n        </div>\r\n        <ul class=\"list-inline\">\r\n          <li class=\"list-inline-item\">\r\n            <a href=\"/\">Home</a>\r\n          </li>\r\n          <li class=\"list-inline-item\">\r\n            <a href=\"https://abslearning.in/\">Services</a>\r\n          </li>\r\n          <li class=\"list-inline-item\">\r\n            <a href=\"#\">Privacy Policy</a>\r\n          </li>\r\n        </ul>\r\n        <p class=\"copyright\">\r\n          © ABS <script>document.write(new Date().getFullYear())</script>\r\n        </p>\r\n        \r\n      </footer>\r\n     </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Footer;\r\n","/**\n * @Author :JAY\n * Project :ABS Project Tracking System \n * Client : React etc.,\n */\n\n// Master APP file\nimport \"./App.css\";\nimport \"./style.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Base\";\n//import Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\nimport Footer from \"../src/components/Layout/footer\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decode_jwtToken = jwt_decode(jwtToken);\n\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decode_jwtToken,\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decode_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          {\n            //Public Routes\n          }\n          <Route exact path={\"/\"} component={Landing} />\n          {/* <Route exact path={\"/register\"} component={Register} /> */}\n          <Route exact path={\"/login\"} component={Login} />\n          {}\n          <Switch>\n            <SecuredRoute exact path={\"/dashboard\"} component={Dashboard} />\n            <SecuredRoute exact path={\"/addProject\"} component={AddProject} />\n            <SecuredRoute\n              exact\n              path={\"/updateProject/:id\"}\n              component={UpdateProject}\n            />\n            <SecuredRoute\n              exact\n              path={\"/projectBoard/:id\"}\n              component={ProjectBoard}\n            />\n            <SecuredRoute\n              exact\n              path={\"/addProjectTask/:id\"}\n              component={AddProjectTask}\n            />\n            <SecuredRoute\n              exact\n              path={\"/updateProjectTask/:backlog_id/:pt_id\"}\n              component={UpdateProjectTask}\n            />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","/**\n * @Author :JAY\n * Project :ABS Project Tracking System \n * Client : React etc.,\n */\nconst reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","/**\n * @Author :JAY\n * Project :ABS Project Tracking System \n * Client : React etc.,\n */\n\n// Default Index JS\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\nreportWebVitals();\n"],"sourceRoot":""}